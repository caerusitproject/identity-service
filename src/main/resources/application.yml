#spring:
#  application:
#    name: identity-service
#  profiles:
#    active: dev
#  config:
#    import: optional:configserver:http://localhost:8888
#
#

server:
  port: 8086

spring:
  application:
    name: identity-service
  #  config:
  #    import: optional:configserver:http://config-server:8888
  datasource:
    url: jdbc:postgresql://localhost:5432/identity_service
    username: postgres
    password: Welcome@1234
    driver-class-name: org.postgresql.Driver

  jpa:
    hibernate:
      ddl-auto: update
    show-sql: true
    database-platform: org.hibernate.dialect.PostgreSQLDialect
  security:
    oauth2:
      authorizationserver:
        issuer: http://localhost:8086
  kafka:
    #bootstrap-servers: broker:9092
    bootstrap-servers: localhost:9092
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
    topic:
      notification-events: notification-events

jwt:
  keystore:
    location: classpath:jwt-keystore.jks
    password: changeit
  key:
    alias: jwt-key
    password: changeit
    id: caerus-key-1

application:
  security:
    jwt:
      expiration: 900000 # 15 min in ms
      refresh-token:
        expiration: 1296000000 # 15 days in ms

services:
  user-service:
    url: http://localhost:8081

eureka:
  client:
    service-url:
      defaultZone: http://localhost:8761/eureka/
  instance:
    prefer-ip-address: true
    hostname: identity-service
    instance-id: ${spring.application.name}:${server.port}

logging:
  level:
    com.caerus.identity.client: DEBUG

resilience4j:
  circuitbreaker:
    instances:
      userService:
        registerHealthIndicator: true
        slidingWindowSize: 10
        minimumNumberOfCalls: 5
        failureRateThreshold: 50
        waitDurationInOpenState: 10s
        permittedNumberOfCallsInHalfOpenState: 3
  retry:
    instances:
      userService:
        maxAttempts: 3
        waitDuration: 2s

camel:
  springboot:
    name: identityservice-camel


#server:
#  port: 8086
#
#spring:
#  application:
#    name: identity-service
#  #  config:
#  #    import: optional:configserver:http://config-server:8888
#  datasource:
#    url: jdbc:postgresql://postgres:5432/identity_service
#    username: postgres
#    password: Welcome@1234
#    driver-class-name: org.postgresql.Driver
#
#  jpa:
#    hibernate:
#      ddl-auto: update
#    show-sql: true
#    database-platform: org.hibernate.dialect.PostgreSQLDialect
#  security:
#    oauth2:
#      authorizationserver:
#        issuer: http://identity-service:8086
#  kafka:
#    bootstrap-servers: broker:29092
#    producer:
#      key-serializer: org.apache.kafka.common.serialization.StringSerializer
#      value-serializer: org.apache.kafka.common.serialization.StringSerializer
#    topic:
#      notification-events: notification-events
#
#jwt:
#  keystore:
#    location: classpath:jwt-keystore.jks
#    password: changeit
#  key:
#    alias: jwt-key
#    password: changeit
#    id: caerus-key-1
#
#application:
#  security:
#    jwt:
#      expiration: 900000 # 15 min in ms
#      refresh-token:
#        expiration: 1296000000 # 15 days in ms
#
#services:
#  user-service:
#    url: http://user-service:8081
#
#eureka:
#  client:
#    service-url:
#      defaultZone: http://eureka-server:8761/eureka/
#  instance:
#    prefer-ip-address: true
#    hostname: identity-service
#    instance-id: ${spring.application.name}:${server.port}
#
#logging:
#  level:
#    com.caerus.identity.client: DEBUG
#
#resilience4j:
#  circuitbreaker:
#    instances:
#      userService:
#        registerHealthIndicator: true
#        slidingWindowSize: 10
#        minimumNumberOfCalls: 5
#        failureRateThreshold: 50
#        waitDurationInOpenState: 10s
#        permittedNumberOfCallsInHalfOpenState: 3
#  retry:
#    instances:
#      userService:
#        maxAttempts: 3
#        waitDuration: 2s
#
#camel:
#  springboot:
#    name: identityservice-camel
#  component:
#    kafka:
#      brokers: broker:29092
#      requestTimeoutMs: 20000
#      retryBackoffMs: 5000